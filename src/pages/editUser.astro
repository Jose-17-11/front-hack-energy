---
import Button from "@components/common/Button.astro";
import Layout from '../layouts/Layout.astro';
import BaseL from '../layouts/BaseAdmin.astro';
import pool from '../database/conexion';
---
<Layout title="LowerG"> 
  <main>
    <BaseL>
      <section class="w-full h-auto flex items-center justify-center mt-3">
        <form class="w-full max-w-lg rounded-xl shadow-lg bg-white pl-14 pr-14 pt-4 pb-4 border border-gray-200">
          <div class="w-full flex flex-col gap-5">
            <h1 class="text-2xl font-semibold text-center">
              Administración de usuarios
            </h1>
            <h2 class="text-xl font-semibold text-center text-gray-800">
              Editar usuario
            </h2>
            <input required id="nombre" type="text" name="nombre" placeholder="Nombre" maxlength="30" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
            <input required id="apellidoP" type="text" name="apellidoP" placeholder="Apellido Paterno" maxlength="30" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
            <input required id="apellidoM" type="text" name="apellidoM" placeholder="Apellido Materno" maxlength="30" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
            <input required id="edad" type="number" name="edad" placeholder="Edad" min="13" max="99" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
            <input required id="pais" type="text" name="pais" placeholder="País" maxlength="50" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
            <input required id="correo" type="email" name="correo" placeholder="Correo" maxlength="50" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
            <input required id="telefono" type="tel" name="telefono" placeholder="Teléfono" maxlength="10" pattern="[0-9]*" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
            <input required id="passw" type="text" name="passw" placeholder="Contraseña" maxlength="50" class="w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
            <Button types="submit" class="w-full bg-pink-500 hover:bg-pink-600 font-bold py-2 rounded-lg transition-all duration-300">
                <p class="text-white">Actualizar</p>
            </Button>           
          </div>
        </form>
        <div id="modal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden">
          <div class="bg-white p-4 rounded-lg shadow-lg w-1/3">
            <h2 id="modal-title" class="text-xl text-purple-600 font-bold mb-4 text-center">Título del Modal</h2>
            <p id="modal-message" class="mb-4 text-center">Mensaje del Modal</p>
          </div>
        </div>        
      </section>
    </BaseL>
  </main>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", async () => {
    const modal = document.getElementById("modal");
    const modalTitle = document.getElementById("modal-title");
    const modalMessage = document.getElementById("modal-message");
    const modalClose = document.getElementById("modal-close");

    // Obtén el parámetro id de la URL
    const userId = new URLSearchParams(window.location.search).get("id");

    if (!userId) {
      showModal("Error", "No se proporcionó un ID de usuario", "error");
      return;
    }

    try {
      const response = await fetch(`http://localhost:5000/api/getUser/${userId}`);
      if (response.ok) {
        const user = await response.json();
        document.getElementById("nombre").value = user.nombre;
        document.getElementById("apellidoP").value = user.apellidoP;
        document.getElementById("apellidoM").value = user.apellidoM;
        document.getElementById("edad").value = user.edad;
        document.getElementById("pais").value = user.pais;
        document.getElementById("correo").value = user.correo;
        document.getElementById("telefono").value = user.telefono;
        document.getElementById("passw").value = user.passw;
      } else {
        showModal("Error", "Error al obtener los datos del usuario", "error");
      }
    } catch (error) {
      console.error("Error:", error);
      showModal("Error", "Error al obtener los datos del usuario", "error");
    }

    const form = document.querySelector("form");
    form?.addEventListener("submit", async (event) => {
      event.preventDefault();

      const data = {
        nombre: document.getElementById("nombre").value,
        apellidoP: document.getElementById("apellidoP").value,
        apellidoM: document.getElementById("apellidoM").value,
        edad: parseInt(document.getElementById("edad").value),
        pais: document.getElementById("pais").value,
        correo: document.getElementById("correo").value,
        telefono: document.getElementById("telefono").value,
        passw: document.getElementById("passw").value,
      };

      try {
        const response = await fetch(`http://localhost:5000/api/updateUser/${userId}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(data),
        });

        if (response.ok) {
          showModal("Éxito", "Usuario actualizado correctamente", "success");
          setTimeout(() => {
            window.location.href = "/adminUser"; // Redirige a la página de administración
          }, 2000);
        } else {
          showModal("Error", "Error al actualizar el usuario", "error");
        }
      } catch (error) {
        console.error("Error:", error);
        showModal("Error", "Error al actualizar el usuario", "error");
      }
    });

    modalClose.addEventListener("click", () => {
      modal.classList.add("hidden");
    });

    function showModal(title, message, type) {
      modalTitle.textContent = title;
      modalMessage.textContent = message;
      modal.classList.remove("hidden");
    }
  });
</script>

  