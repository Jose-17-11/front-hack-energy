---
import { Image } from "astro:assets";
import ImageFondo from "@assets/logo.png";
import Button from "@components/common/Button.astro";
---

<section class="w-5/6 h-5/6 bg-white grid grid-cols-3 grid-rows-1 rounded-xl shadow-2xl shadow-black">
    <figure class="col-span-2">
        <Image src={ImageFondo} alt="ejemplo" class="w-full h-full object-cover bg-purple-500 rounded-l-xl" />
    </figure>
    <form action="" method="post" class="rounded-xl col-span-1 flex items-center justify-center">
        <div class="w-4/5 h-auto flex flex-col justify-center items-center gap-4">
            <h2 class="text-5xl font-bold text-center">
                Lower<span class="text-pink-500">G</span>
            </h2>
            <h3 class="text-2xl font-semibold text-center">
                Crear cuenta
            </h3>

            <input required type="text" id="nombre" placeholder="Nombre" maxlength="30" class="w-full bg-transparent border-b-2 focus:outline-none" oninput="this.value = this.value.replace(/[0-9]/g, '')">

            <input required type="text" id="apellidoP" placeholder="Apellido Paterno" maxlength="30" class="w-full bg-transparent border-b-2 focus:outline-none" oninput="this.value = this.value.replace(/[0-9]/g, '')">

            <input required type="text" id="apellidoM" placeholder="Apellido Materno" maxlength="30" class="w-full bg-transparent border-b-2 focus:outline-none" oninput="this.value = this.value.replace(/[0-9]/g, '')">

            <input required type="number" id="edad" placeholder="Edad" min="13" max="99" class="w-full bg-transparent border-b-2 focus:outline-none" oninput="if(this.value.length>2) this.value = this.value.slice(0,2)">

            <input required type="text" id="pais" placeholder="País" maxlength="50" class="w-full bg-transparent border-b-2 focus:outline-none" oninput="this.value = this.value.replace(/[0-9]/g, '')">

            <input required type="email" id="correo" placeholder="Correo" maxlength="50" class="w-full bg-transparent border-b-2 focus:outline-none">

            <input required type="tel" id="telefono" placeholder="Teléfono" maxlength="10" pattern="[0-9]*" class="w-full bg-transparent border-b-2 focus:outline-none" oninput="this.value = this.value.replace(/[^0-9]/g, '').slice(0,10)">

            <!-- Campo de contraseña oculto -->
            <input required type="password" id="passw" placeholder="Contraseña" maxlength="8" class="w-full bg-transparent border-b-2 focus:outline-none">

            <!-- Campo para repetir contraseña -->
            <input required type="password" id="confirmPassw" placeholder="Repetir Contraseña" maxlength="8" class="w-full bg-transparent border-b-2 focus:outline-none">

            <Button types="submit" id="register" class="w-full mt-4">
                <p class="text-white">Registrar</p>
            </Button>
            <p class="font-bold text-sm flex justify-center items-center gap-2 mt-2">
                ¿Ya tienes una cuenta?
                <a href="/indexApp" class="text-pink-500 hover:underline">LOGIN</a>
            </p>            
        </div>
    </form>
    
    <!-- Modal de Error -->
    <div id="errorModal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden">
      <div class="bg-white p-6 rounded-lg shadow-lg max-w-md w-full">
        <h2 class="text-xl font-bold text-red-500 text-center mb-4">Error</h2>
        <p id="errorMessage" class="text-center mb-4 text-gray-700">Mensaje de error</p>
        <div class="flex justify-center">
          <button id="closeErrorModal" class="bg-pink-500 hover:bg-pink-600 text-white font-bold py-2 px-4 rounded-lg">
            Cerrar
          </button>
        </div>
      </div>
    </div>
    
    <!-- Modal de Éxito -->
    <div id="successModal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden">
      <div class="bg-white p-6 rounded-lg shadow-lg max-w-md w-full">
        <h2 class="text-xl font-bold text-purple-500 text-center mb-4">Registro Exitoso</h2>
        <p id="successMessage" class="text-center mb-4 text-gray-700">Usuario registrado correctamente.</p>
        <div class="flex justify-center">
          <button id="closeSuccessModal" class="bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded-lg">
            Aceptar
          </button>
        </div>
      </div>
    </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector("form");
    const nombre = document.getElementById("nombre");
    const apellidoP = document.getElementById("apellidoP");
    const apellidoM = document.getElementById("apellidoM");
    const edad = document.getElementById("edad");
    const pais = document.getElementById("pais");
    const correo = document.getElementById("correo");
    const telefono = document.getElementById("telefono");
    const passw = document.getElementById("passw");
    const confirmPassw = document.getElementById("confirmPassw");

    const errorModal = document.getElementById("errorModal");
    const errorMessage = document.getElementById("errorMessage");
    const closeErrorModal = document.getElementById("closeErrorModal");

    const successModal = document.getElementById("successModal");
    const successMessage = document.getElementById("successMessage");
    const closeSuccessModal = document.getElementById("closeSuccessModal");

    // Expresión regular para validar la contraseña
    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8}$/;

    // Expresión regular para validar el dominio del correo
    const emailPattern = /^[a-zA-Z0-9._%+-]+@(gmail\.com|outlook\.com|hotmail\.com|icloud\.com|cuautla\.tecnm\.mx)$/;

    // Función para mostrar el modal de error
    function showErrorModal(message) {
      errorMessage.textContent = message;
      errorModal.classList.remove("hidden");
    }

    // Función para mostrar el modal de éxito
    function showSuccessModal(message) {
      successMessage.textContent = message;
      successModal.classList.remove("hidden");
    }

    // Cerrar el modal de error
    closeErrorModal.addEventListener("click", () => {
      errorModal.classList.add("hidden");
    });

    // Cerrar el modal de éxito y redirigir al login
    closeSuccessModal.addEventListener("click", () => {
      successModal.classList.add("hidden");
      window.location.href = "/indexApp";
    });

    form?.addEventListener("submit", async (event) => {
      event.preventDefault();

      let isValid = true;
      let errorMessage = "";

      // Validación de edad
      const edadValue = parseInt(edad.value);
      if (isNaN(edadValue) || edadValue < 13 || edadValue > 99) {
        isValid = false;
        errorMessage += "La edad debe ser un número entre 13 y 99.\n";
      }

      // Validación de contraseña
      if (!passwordRegex.test(passw.value)) {
        isValid = false;
        errorMessage += "La contraseña debe tener 8 caracteres, incluyendo mayúsculas, minúsculas, números y un carácter especial.\n";
      }

      // Validación de coincidencia de contraseñas
      if (passw.value !== confirmPassw.value) {
        isValid = false;
        errorMessage += "Las contraseñas no coinciden.\n";
      }

      // Validación de correo electrónico
      if (!emailPattern.test(correo.value)) {
        isValid = false;
        errorMessage += "Solo se permiten correos de los dominios: @gmail.com, @outlook.com, @hotmail.com, @icloud.com, @cuautla.tecnm.mx\n";
      }

      if (isValid) {
        const data = {
          nombre: nombre.value,
          apellidoP: apellidoP.value,
          apellidoM: apellidoM.value,
          edad: edadValue,
          pais: pais.value,
          correo: correo.value,
          telefono: telefono.value,
          passw: passw.value,
        };

        try {
          const response = await fetch('http://localhost:5000/api/addUser', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data),
          });

          if (response.ok) {
            showSuccessModal("Usuario registrado correctamente.");
          } else {
            showErrorModal("Error al registrar el usuario");
          }
        } catch (error) {
          console.error("Error:", error);
          showErrorModal("Error al registrar el usuario");
        }
      } else {
        showErrorModal(errorMessage);
      }
    });
  });
</script>
